@model Plenamente.Models.ViewModel.CumplimientoViewModel
@{
    ViewBag.Title = "Cumplimiento";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}
<div class="colorVerdeBack">
    <p>Autoevaluación SST</p>
</div>
<div class="contenidoCuerpo">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 colorVerdeBack" style="background: darkgray;border-top: 5px solid white;">
                    <p>@Model.ItemEstandar.Descripcion - @Model.ItemEstandar.Porcentaje %</p>
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                        <br />
                        <p class="text-justify" style="font-size:18px;padding: 20px; border: 1px solid darkgray;margin: 20px;">
                            @Model.ItemEstandar.Verificar
                        </p>
                        
                    </div>
                    <hr />
                    @if (Model.ItemEstandar.Video != null)
                    {<div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            <iframe style="width: 100%; height: 60vh;"
                                    src="@Model.ItemEstandar.Video"
                                    frameborder="0"
                                    allow="accelerometer; encrypted-media; gyroscope; picture-in-picture"
                                    allowfullscreen></iframe>
                        </div>
                    }
                    <hr />
                </div>
            </div>

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ItemEstandarId)
            @Html.HiddenFor(model => model.Nit)
            @Html.HiddenFor(model => model.Registro)
            <div class="">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cumple, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Cumple)
                        @Html.ValidationMessageFor(model => model.Cumple, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nocumple, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Nocumple)
                        @Html.ValidationMessageFor(model => model.Nocumple, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoAplica, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NoAplica)
                        @Html.ValidationMessageFor(model => model.NoAplica, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="" id="divJustifica" style="visibility: @(Model.Cumple ? "visible" : "visible");">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Justifica, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Justifica)
                        @Html.ValidationMessageFor(model => model.Justifica, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nojustifica, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Nojustifica)
                        @Html.ValidationMessageFor(model => model.Nojustifica, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4" style="text-align:center">
                <div class="form-group" style="padding: 20px;">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Observaciones, new { @class = "form-control", required = "required", placeholder = "Aqui las observaciones..." })
                    @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center">
                    @*<input id="btnCumplimiento" type="button" onclick="location.href = '@Url.Action("CargaEvidencia", new { idItem = Model.Id })';" class="btn btn-default" value="Agregar evidencia" style="visibility: @(Model.Id == 0 ? "hidden" : Model.Nocumple && Model.NoAplica ? "hidden" : "visible");" />*@
                    <input  data-toggle="modal" data-target="#myModal" id="btnMasInfo" type="button" onclick="document.getElementById('divMasInfo').style.visibility = 'visible';" class="btn btn-primary" value="Recursos de apoyo" style="visibility: visible; " />

                </div>
            </div>
        </div>
        <div class="">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <label class="text-danger">@ViewBag.TextError</label>
            <label class="text-success">@ViewBag.TextExitoso</label>
        </div>

    }

</div>
<div class="contenidoVolver">
    <a href="@Url.Action("AutoevaluacionSST", "AutoEvaluacion")" class="ayudaTitulos">
        <span>Volver a la lista</span> <img src="~/Imagenes/flecha-hacia-la-izquierda.png" />
    </a>
</div>
@*<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>*@

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" >
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Recursos de apoyo</h4>
            </div>
            <div class="modal-body">
                <div class="" id="" style="visibility: visible;">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <label class="">
                            @Model.ItemEstandar.MasInformacion
                        </label>

                    </div>
                </div>
                @if (Model.ItemEstandar.Recurso != "NULL" || Model.ItemEstandar.Reursob != "NULL")
                {
                    <div class="">
                        @if (Model.ItemEstandar.Recurso != "NULL")
                        {
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                                <p class="text-justify">
                                    <a href="@Model.ItemEstandar.Recurso" style="color:black"><i class="fa fa-download" style="font-size: 50px; color: darkgray;"></i> @(Model.ItemEstandar.Recurso.Split('/').Last() ?? "Ver Ayuda") </a>
                                </p>
                            </div>
                        }
                        @if (Model.ItemEstandar.Reursob != "NULL")
                        {
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                                <p class="text-justify">
                                    <a href="@Model.ItemEstandar.Recurso" style="color:black"><i class="fa fa-download" style="font-size: 50px; color: darkgray;"></i> @(Model.ItemEstandar.Recurso.Split('/').Last() ?? "Ver Ayuda") </a>
                                </p>
                            </div>
                        }
                    </div>
                    <hr />
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var cumple = document.getElementById("Cumple");
        var nocumple = document.getElementById("Nocumple");
        var Justifica = document.getElementById("Justifica");
        var Nojustifica = document.getElementById("Nojustifica");
        var btnPlanTrabajo = document.getElementById("btnPlanTrabajo");
        var NoAplica = document.getElementById("NoAplica");
        var divJustifica = document.getElementById("divJustifica");

        var Id = document.getElementById("Id");
        cumple.addEventListener('change', function () {
            Nojustifica.checked = false;
            NoAplica.checked = false;
            nocumple.checked = !this.checked;
            if (this.checked)
                divJustifica.style.visibility = 'hidden';
            else
                divJustifica.style.visibility = 'visible';
            Justifica.checked = cumple.checked;
        });
        nocumple.addEventListener('change', function () {
            Nojustifica.checked = false;
            NoAplica.checked = false;
            cumple.checked = !this.checked;
            cumple.checked = !this.checked;
            if (this.checked)
                divJustifica.style.visibility = 'hidden';
            else
                divJustifica.style.visibility = 'visible';
            Justifica.checked = cumple.checked;
        });
        NoAplica.addEventListener('change', function () {
            if (this.checked) {
                divJustifica.style.visibility = 'visible';
                cumple.checked = false;
                nocumple.checked = false;
            } else {
                divJustifica.style.visibility = 'hidden';
                cumple.checked = true;
            }
        });
        Justifica.addEventListener('change', function () {
            if (this.checked) {
                Nojustifica.checked = false;
                btnPlanTrabajo.style.visibility = 'hidden';
            } else {
                Nojustifica.checked = true;
                btnPlanTrabajo.style.visibility = 'visible';
            }
        });
        Nojustifica.addEventListener('change', function () {
            if (this.checked) {
                Justifica.checked = false;
                btnPlanTrabajo.style.visibility = 'visible';
            } else {
                Justifica.checked = true;
                btnPlanTrabajo.style.visibility = 'hidden';
            }
        });
    </script>
}