@model Plenamente.Models.ViewModel.CumplimientoViewModel

@{
    ViewBag.Title = "Cumplimiento";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}

<div class="colorVerdeBack">
    <p>Autoevaluación SST</p>
</div>
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <br />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <label class="text-danger">@ViewBag.TextError</label>
            <br />
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ItemEstandarId)
            @Html.HiddenFor(model => model.Nit)
            @Html.HiddenFor(model => model.Registro)
            <div class="row">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cumple, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Cumple)
                            @Html.ValidationMessageFor(model => model.Cumple, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nocumple, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Nocumple)
                            @Html.ValidationMessageFor(model => model.Nocumple, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Justifica, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Justifica)
                            @Html.ValidationMessageFor(model => model.Justifica, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nojustifica, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Nojustifica)
                            @Html.ValidationMessageFor(model => model.Nojustifica, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoAplica, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.NoAplica)
                            @Html.ValidationMessageFor(model => model.NoAplica, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Observaciones, new { @class = "form-control", required = "required", placeholder = "Aqui las observaciones..." })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row" id="frmEvidencias">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            Aquí la vista parcial de agregar evidencia.
        </div>
    </div>
</div>
<div class="contenidoVolver">
    <a href="@Url.Action("AutoevaluacionSST", "AutoEvaluacion")" class="ayudaTitulos">
        <span>Volver a la lista</span> <img src="~/Imagenes/flecha-hacia-la-izquierda.png" />
    </a>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var cumple = document.getElementById("Cumple");
        var nocumple = document.getElementById("Nocumple");
        var frmEvidencias = document.getElementById("frmEvidencias");
        var Justifica = document.getElementById("Justifica");
        var Nojustifica = document.getElementById("Nojustifica");
        var NoAplica = document.getElementById("NoAplica");
        cumple.addEventListener('change', function () {
            frmEvidencias.style.visibility = 'visible';
            Nojustifica.checked = false;
            Justifica.checked = false;
            NoAplica.checked = false;
            nocumple.checked = !this.checked;
        });
        nocumple.addEventListener('change', function () {
            frmEvidencias.style.visibility = 'visible';
            Nojustifica.checked = false;
            Justifica.checked = false;
            NoAplica.checked = false;
            cumple.checked = !this.checked;
        });
        Justifica.addEventListener('change', function () {
            frmEvidencias.style.visibility = 'visible';
            if (this.checked) {
                Nojustifica.checked = false;
                NoAplica.checked = false;
            } else {
                Nojustifica.checked = true;
            }
        });
        Nojustifica.addEventListener('change', function () {
            frmEvidencias.style.visibility = 'visible';
            if (this.checked) {
                Justifica.checked = false;
                NoAplica.checked = false;
            } else {
                Justifica.checked = true;
            }
        });
        NoAplica.addEventListener('change', function () {
            if (this.checked) {
                frmEvidencias.style.visibility = 'hidden';
                Justifica.checked = false;
                Nojustifica.checked = false;
            } else {
                frmEvidencias.style.visibility = 'visible';
                Justifica.checked = true;
            }
        });
    </script>
}
