@model Plenamente.Models.ViewModel.PlandetrabajoActividadesViewModel
@using Plenamente.App_Tool;
@using Plenamente.Models.ViewModel;

@{
    ViewBag.Title = "Actividades plan de trabajo";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}
<div class="colorVerdeBack">
    <p>Crear plan de trabajo</p>
</div>

<div class="contenidoCuerpo marco">
    <div class="form-group justify-content-center">
        <div class="col-md-12">
            @Html.EditorFor(model => model.NombrePlanTrabajo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.NombrePlanTrabajo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="panel panel-default text-center justify-content-center">

        <table class="table table-bordered text-center justify-content-center">
            <tr>
                <th>
                    Nombre Plan
                </th>
                <th>
                    Actividad
                </th>
                <th>
                    Responsable
                </th>
                <th>
                    Opciones
                </th>
            </tr>


            @foreach (var item in ((PaginadorGenerico<ActividadesAsignadasPlanDeTrabajoViewModel>)ViewBag.actividadesAsignadas).Resultado)
            {               
                    <tr>
                        <td>
                            @item.NombrePlanTrabajo
                        </td>
                        <td>
                            @item.DescripcionCumplimiento
                        </td>
                        <td>
                            @item.NombreUser
                        </td>
                        <td>
                            <a class="btn btn-danger" href="@Url.Action("EliminarActividadPlanTrabajo","PlandeTrabajo" , new { IdUserPlanTrabajo=item.IdUserPlanDeTrabajoActividad })" title="Eliminar">
                                Eliminar
                            </a>

                        </td>
                    </tr>                
            }

        </table>
        @*CÓDIGO PARA EL PAGINADOR DE REGISTROS*@
        @if (((PaginadorGenerico<ActividadesAsignadasPlanDeTrabajoViewModel>)ViewBag.actividadesAsignadas).Resultado.Count() > 0)
        {
            <span>
                <strong>@ViewBag.actividadesAsignadas.TotalRegistros</strong> registros encontrados
            </span>
            <span>&nbsp;|&nbsp;</span>
            <span>
                Página <strong>@(ViewBag.actividadesAsignadas.PaginaActual)</strong> de
                <strong>@ViewBag.actividadesAsignadas.TotalPaginas</strong>
            </span>
            <span>&nbsp;|&nbsp;</span>
        }
        else
        {
            <span>No hay resultados para esta búsqueda</span>
            <span>&nbsp;|&nbsp;</span>
        }

        @if (ViewBag.actividadesAsignadas.PaginaActual > 1)
        {
            @Html.ActionLink("<<", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo,pagina = 1 },
                            new { @class = "btn btn-sm btn-default" })
            <span></span>
            @Html.ActionLink("Anterior", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo, pagina = ViewBag.actividadesAsignadas.PaginaActual - 1 },
                            new { @class = "btn btn-sm btn-default" })
        }
        else
        {
            @Html.ActionLink("<<", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo, pagina = 1 },
                            new { @class = "btn btn-sm btn-default disabled" })
            <span></span>
            @Html.ActionLink("Anterior", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo, pagina = 1 },
                            new { @class = "btn btn-sm btn-default disabled" })
        }
        <span></span>
        @if (ViewBag.actividadesAsignadas.PaginaActual < ViewBag.actividadesAsignadas.TotalPaginas)
        {
            @Html.ActionLink("Siguiente", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo,pagina = ViewBag.actividadesAsignadas.PaginaActual + 1 },
                            new { @class = "btn btn-sm btn-default" })
            <span></span>
            @Html.ActionLink(">>", "Index", new { IdPlantTrabajo = Model.IdPlantTrabajo,pagina = ViewBag.actividadesAsignadas.TotalPaginas },
                            new { @class = "btn btn-sm btn-default" })
        }
        else
        {
            @Html.ActionLink("Siguiente", "ActividadesPlanTrabajo", new { IdPlantTrabajo = Model.IdPlantTrabajo,pagina = ViewBag.actividadesAsignadas.TotalPaginas - 1 },
                            new { @class = "btn btn-sm btn-default disabled" })
            <span></span>
            @Html.ActionLink(">>", "Index", new { IdPlantTrabajo = Model.IdPlantTrabajo, pagina = ViewBag.actividadesAsignadas.TotalPaginas },
                            new { @class = "btn btn-sm btn-default disabled" })
        }



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="window.location='../ActividadCumplimiento/Create'" type="submit" value="Crear Actividad" class="btn btn-default" />
            </div>
            <hr />
        </div>
        @Html.LabelFor(model => model.NombrePlanTrabajo, htmlAttributes: new { @class = "control-label" })
        @using (Html.BeginForm())
        {
            <input type="hidden" name="IdPlantTrabajo" id="IdPlantTrabajo" value=@Model.IdPlantTrabajo />
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.IdActiCumplimiento, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(x => x.IdActiCumplimiento, (SelectList)ViewBag.actividades, "Seleccionar Actividad", new { @class = "form-control ", id = "IdActiCumplimiento" })
                    @Html.ValidationMessageFor(model => model.IdActiCumplimiento, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdUser, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(x => x.IdUser, (SelectList)ViewBag.users, "Responsable", new { @class = "form-control", id = "IdUser" })
                    @Html.ValidationMessageFor(model => model.IdUser, "", new { @class = "text-danger" })
                </div>
                <label class="text-danger">@ViewBag.TextError</label>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Asignar Actividad" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>

</div>
<div class="contenidoVolver">
    <a href="@Url.Action("Index", "PlandeTrabajo")" class="ayudaTitulos">
        <span>Volver a los planes de trabajo</span> <img src="~/Imagenes/flecha-hacia-la-izquierda.png" />
    </a>
</div>

